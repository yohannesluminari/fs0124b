@import 'reset';
@import 'variabili';
@import 'mixins';

h1 {
    font-size: nth($misure, 3);
    color: $colore;

    @media screen and (min-width: 800px) {
        background-color: red;
    }
}

h2 {
    font-size: nth($misure, 2);
    color: map-get($colori, primary);

}

h3 {
    @include coloriFont
}

ul {
    li {
        background-color: black;

        &:hover {
            background-color: red;
        }

        a {
            color: nth($colore, 2);
            font-size: nth($misure, 2);
        }
    }
}

.area-chiara,
.area-scura {
    height: 200px;
    font-style: italic;
    text-decoration: line-through;
    font-size: 1.4rem;
}

.area-chiara {
    background-color: rgb(12, 7, 50);
    @include coloreDinamico(rgb(12, 7, 50));
    color: nth($colore, 2);
}

.area-scura {
    // @extend .area-chiara per non scrivere sempre aggiungo a questo le prorprieta di are chiara comune
    background-color: rgb(146, 244, 60);
    @include coloreDinamico(rgb(146, 244, 60));
    color: nth($colore, 2);
}
$step: 15, 30, 45;

@each $s in $step {

    .mt-#{$s} {
        margin-top: $s + px;
    }

    .mb-#{$s} {
        margin-bottom: $s + px;
    }

    .mr-#{$s} {
        margin-right: $s + px;
    }

    .ml-#{$s} {
        margin-left: $s + px;
    }

}



@mixin spaziature($direzione, $dirAbbreviata, $misura) {


    .m#{$dirAbbreviata}-#{$misura} {
        margin-#{$direzione}: $misura + px;
    }

    .p#{$dirAbbreviata}-#{$misura} {
        padding-#{$direzione}: $misura + px;
    }

}

@mixin generaSpaziature($misura) {

    $sizesMap : (
        top:t,
        left:l,
        bottom:b,
        right:r
    );

    @each $chiave, $valore in $sizesMap {

        @include spaziature($chiave, $valore, $misura);

    }
}

$sizes: 15, 30, 45, 90, 1050;

@each $size in $sizes{
    @include generaSpaziature($size);
}



/*

.mt-15{
    margin-top:15px
}
.pt-15{
    padding-top:15px
}

*/